/*
 * Selects compander and smart boost settings
 * for a given speaker mode
 */
enum {
	WSA_MACRO_SPKR_MODE_DEFAULT,
	WSA_MACRO_SPKR_MODE_1, /* COMP Gain = 12dB, Smartboost Max = 5.5V */
};

/* Rx path gain offsets */
enum {
	WSA_MACRO_GAIN_OFFSET_M1P5_DB,
	WSA_MACRO_GAIN_OFFSET_0_DB,
};

/* WSA - macro#2 */
#define WSA_START_OFFSET			0
#define CDC_WSA_CLK_RST_CTRL_MCLK_CONTROL	(0x0000)
#define CDC_WSA_CLK_RST_CTRL_FS_CNT_CONTROL	(0x0004)
#define CDC_WSA_CLK_RST_CTRL_SWR_CONTROL	(0x0008)
#define CDC_WSA_TOP_TOP_CFG0		(0x0080)
#define CDC_WSA_TOP_TOP_CFG1		(0x0084)
#define CDC_WSA_TOP_FREQ_MCLK		(0x0088)
#define CDC_WSA_TOP_DEBUG_BUS_SEL	(0x008C)
#define CDC_WSA_TOP_DEBUG_EN0		(0x0090)
#define CDC_WSA_TOP_DEBUG_EN1		(0x0094)
#define CDC_WSA_TOP_DEBUG_DSM_LB		(0x0098)
#define CDC_WSA_TOP_RX_I2S_CTL		(0x009C)
#define CDC_WSA_TOP_TX_I2S_CTL		(0x00A0)
#define CDC_WSA_TOP_I2S_CLK		(0x00A4)
#define CDC_WSA_TOP_I2S_RESET		(0x00A8)
#define CDC_WSA_RX_INP_MUX_RX_INT0_CFG0	(0x0100)
#define CDC_WSA_RX_INP_MUX_RX_INT0_CFG1	(0x0104)
#define CDC_WSA_RX_INP_MUX_RX_INT1_CFG0	(0x0108)
#define CDC_WSA_RX_INP_MUX_RX_INT1_CFG1	(0x010C)
#define CDC_WSA_RX_INP_MUX_RX_MIX_CFG0	(0x0110)
#define CDC_WSA_RX_INP_MUX_RX_EC_CFG0	(0x0114)
#define CDC_WSA_RX_INP_MUX_SOFTCLIP_CFG0	(0x0118)
/* VBAT registers  */
#define CDC_WSA_VBAT_BCL_VBAT_PATH_CTL	(0x0180)
#define CDC_WSA_VBAT_BCL_VBAT_CFG	(0x0184)
#define CDC_WSA_VBAT_BCL_VBAT_ADC_CAL1	(0x0188)
#define CDC_WSA_VBAT_BCL_VBAT_ADC_CAL2	(0x018C)
#define CDC_WSA_VBAT_BCL_VBAT_ADC_CAL3	(0x0190)
#define CDC_WSA_VBAT_BCL_VBAT_PK_EST1	(0x0194)
#define CDC_WSA_VBAT_BCL_VBAT_PK_EST2	(0x0198)
#define CDC_WSA_VBAT_BCL_VBAT_PK_EST3	(0x019C)
#define CDC_WSA_VBAT_BCL_VBAT_RF_PROC1	(0x01A0)
#define CDC_WSA_VBAT_BCL_VBAT_RF_PROC2	(0x01A4)
#define CDC_WSA_VBAT_BCL_VBAT_TAC1	(0x01A8)
#define CDC_WSA_VBAT_BCL_VBAT_TAC2	(0x01AC)
#define CDC_WSA_VBAT_BCL_VBAT_TAC3	(0x01B0)
#define CDC_WSA_VBAT_BCL_VBAT_TAC4	(0x01B4)
#define CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD1	(0x01B8)
#define CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD2	(0x01BC)
#define CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD3	(0x01C0)
#define CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD4	(0x01C4)
#define CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD5	(0x01C8)
#define CDC_WSA_VBAT_BCL_VBAT_DEBUG1	(0x01CC)
#define CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD_MON	(0x01D0)
#define CDC_WSA_VBAT_BCL_VBAT_GAIN_MON_VAL	(0x01D4)
#define CDC_WSA_VBAT_BCL_VBAT_BAN	(0x01D8)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD1	(0x01DC)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD2	(0x01E0)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD3	(0x01E4)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD4	(0x01E8)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD5	(0x01EC)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD6	(0x01F0)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD7	(0x01F4)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD8	(0x01F8)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD9	(0x01FC)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_ATTN1	(0x0200)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_ATTN2	(0x0204)
#define CDC_WSA_VBAT_BCL_VBAT_BCL_ATTN3	(0x0208)
#define CDC_WSA_VBAT_BCL_VBAT_DECODE_CTL1	(0x020C)
#define CDC_WSA_VBAT_BCL_VBAT_DECODE_CTL2	(0x0210)
#define CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG1	(0x0214)
#define CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG2	(0x0218)
#define CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG3	(0x021C)
#define CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG4	(0x0220)
#define CDC_WSA_VBAT_BCL_VBAT_DECODE_ST	(0x0224)
#define CDC_WSA_TX0_SPKR_PROT_PATH_CTL	(0x0244)
#define CDC_WSA_TX0_SPKR_PROT_PATH_CFG0	(0x0248)
#define CDC_WSA_TX1_SPKR_PROT_PATH_CTL	(0x0264)
#define CDC_WSA_TX1_SPKR_PROT_PATH_CFG0	(0x0268)
#define CDC_WSA_TX2_SPKR_PROT_PATH_CTL	(0x0284)
#define CDC_WSA_TX2_SPKR_PROT_PATH_CFG0	(0x0288)
#define CDC_WSA_TX3_SPKR_PROT_PATH_CTL	(0x02A4)
#define CDC_WSA_TX3_SPKR_PROT_PATH_CFG0	(0x02A8)
#define CDC_WSA_INTR_CTRL_CFG		(0x0340)
#define CDC_WSA_INTR_CTRL_CLR_COMMIT	(0x0344)
#define CDC_WSA_INTR_CTRL_PIN1_MASK0	(0x0360)
#define CDC_WSA_INTR_CTRL_PIN1_STATUS0	(0x0368)
#define CDC_WSA_INTR_CTRL_PIN1_CLEAR0	(0x0370)
#define CDC_WSA_INTR_CTRL_PIN2_MASK0	(0x0380)
#define CDC_WSA_INTR_CTRL_PIN2_STATUS0	(0x0388)
#define CDC_WSA_INTR_CTRL_PIN2_CLEAR0	(0x0390)
#define CDC_WSA_INTR_CTRL_LEVEL0		(0x03C0)
#define CDC_WSA_INTR_CTRL_BYPASS0	(0x03C8)
#define CDC_WSA_INTR_CTRL_SET0		(0x03D0)
#define CDC_WSA_RX0_RX_PATH_CTL		(0x0400)
#define CDC_WSA_RX0_RX_PATH_CFG0		(0x0404)
#define CDC_WSA_RX0_RX_PATH_CFG1		(0x0408)
#define CDC_WSA_RX0_RX_PATH_CFG2		(0x040C)
#define CDC_WSA_RX0_RX_PATH_CFG3		(0x0410)
#define CDC_WSA_RX0_RX_VOL_CTL		(0x0414)
#define CDC_WSA_RX0_RX_PATH_MIX_CTL	(0x0418)
#define CDC_WSA_RX0_RX_PATH_MIX_CFG	(0x041C)
#define CDC_WSA_RX0_RX_VOL_MIX_CTL	(0x0420)
#define CDC_WSA_RX0_RX_PATH_SEC0		(0x0424)
#define CDC_WSA_RX0_RX_PATH_SEC1		(0x0428)
#define CDC_WSA_RX0_RX_PATH_SEC2		(0x042C)
#define CDC_WSA_RX0_RX_PATH_SEC3		(0x0430)
#define CDC_WSA_RX0_RX_PATH_SEC5		(0x0438)
#define CDC_WSA_RX0_RX_PATH_SEC6		(0x043C)
#define CDC_WSA_RX0_RX_PATH_SEC7		(0x0440)
#define CDC_WSA_RX0_RX_PATH_MIX_SEC0	(0x0444)
#define CDC_WSA_RX0_RX_PATH_MIX_SEC1	(0x0448)
#define CDC_WSA_RX0_RX_PATH_DSMDEM_CTL	(0x044C)
#define CDC_WSA_RX1_RX_PATH_CTL		(0x0480)
#define CDC_WSA_RX1_RX_PATH_CFG0		(0x0484)
#define CDC_WSA_RX1_RX_PATH_CFG1		(0x0488)
#define CDC_WSA_RX1_RX_PATH_CFG2		(0x048C)
#define CDC_WSA_RX1_RX_PATH_CFG3		(0x0490)
#define CDC_WSA_RX1_RX_VOL_CTL		(0x0494)
#define CDC_WSA_RX1_RX_PATH_MIX_CTL	(0x0498)
#define CDC_WSA_RX1_RX_PATH_MIX_CFG	(0x049C)
#define CDC_WSA_RX1_RX_VOL_MIX_CTL	(0x04A0)
#define CDC_WSA_RX1_RX_PATH_SEC0		(0x04A4)
#define CDC_WSA_RX1_RX_PATH_SEC1		(0x04A8)
#define CDC_WSA_RX1_RX_PATH_SEC2		(0x04AC)
#define CDC_WSA_RX1_RX_PATH_SEC3		(0x04B0)
#define CDC_WSA_RX1_RX_PATH_SEC5		(0x04B8)
#define CDC_WSA_RX1_RX_PATH_SEC6		(0x04BC)
#define CDC_WSA_RX1_RX_PATH_SEC7		(0x04C0)
#define CDC_WSA_RX1_RX_PATH_MIX_SEC0	(0x04C4)
#define CDC_WSA_RX1_RX_PATH_MIX_SEC1	(0x04C8)
#define CDC_WSA_RX1_RX_PATH_DSMDEM_CTL	(0x04CC)
#define CDC_WSA_BOOST0_BOOST_PATH_CTL	(0x0500)
#define CDC_WSA_BOOST0_BOOST_CTL		(0x0504)
#define CDC_WSA_BOOST0_BOOST_CFG1	(0x0508)
#define CDC_WSA_BOOST0_BOOST_CFG2	(0x050C)
#define CDC_WSA_BOOST1_BOOST_PATH_CTL	(0x0540)
#define CDC_WSA_BOOST1_BOOST_CTL		(0x0544)
#define CDC_WSA_BOOST1_BOOST_CFG1	(0x0548)
#define CDC_WSA_BOOST1_BOOST_CFG2	(0x054C)
#define CDC_WSA_COMPANDER0_CTL0		(0x0580)
#define CDC_WSA_COMPANDER0_CTL1		(0x0584)
#define CDC_WSA_COMPANDER0_CTL2		(0x0588)
#define CDC_WSA_COMPANDER0_CTL3		(0x058C)
#define CDC_WSA_COMPANDER0_CTL4		(0x0590)
#define CDC_WSA_COMPANDER0_CTL5		(0x0594)
#define CDC_WSA_COMPANDER0_CTL6		(0x0598)
#define CDC_WSA_COMPANDER0_CTL7		(0x059C)
#define CDC_WSA_COMPANDER1_CTL0		(0x05C0)
#define CDC_WSA_COMPANDER1_CTL1		(0x05C4)
#define CDC_WSA_COMPANDER1_CTL2		(0x05C8)
#define CDC_WSA_COMPANDER1_CTL3		(0x05CC)
#define CDC_WSA_COMPANDER1_CTL4		(0x05D0)
#define CDC_WSA_COMPANDER1_CTL5		(0x05D4)
#define CDC_WSA_COMPANDER1_CTL6		(0x05D8)
#define CDC_WSA_COMPANDER1_CTL7		(0x05DC)
#define CDC_WSA_SOFTCLIP0_CRC		(0x0600)
#define CDC_WSA_SOFTCLIP0_SOFTCLIP_CTRL	(0x0604)
#define CDC_WSA_SOFTCLIP1_CRC		(0x0640)
#define CDC_WSA_SOFTCLIP1_SOFTCLIP_CTRL	(0x0644)
#define CDC_WSA_EC_HQ0_EC_REF_HQ_PATH_CTL	(0x0680)
#define CDC_WSA_EC_HQ0_EC_REF_HQ_CFG0	(0x0684)
#define CDC_WSA_EC_HQ1_EC_REF_HQ_PATH_CTL	(0x06C0)
#define CDC_WSA_EC_HQ1_EC_REF_HQ_CFG0	(0x06C4)
#define CDC_WSA_SPLINE_ASRC0_CLK_RST_CTL	(0x0700)
#define CDC_WSA_SPLINE_ASRC0_CTL0	(0x0704)
#define CDC_WSA_SPLINE_ASRC0_CTL1	(0x0708)
#define CDC_WSA_SPLINE_ASRC0_FIFO_CTL	(0x070C)
#define CDC_WSA_SPLINE_ASRC0_STATUS_FMIN_CNTR_LSB	(0x0710)
#define CDC_WSA_SPLINE_ASRC0_STATUS_FMIN_CNTR_MSB	(0x0714)
#define CDC_WSA_SPLINE_ASRC0_STATUS_FMAX_CNTR_LSB	(0x0718)
#define CDC_WSA_SPLINE_ASRC0_STATUS_FMAX_CNTR_MSB	(0x071C)
#define CDC_WSA_SPLINE_ASRC0_STATUS_FIFO	(0x0720)
#define CDC_WSA_SPLINE_ASRC1_CLK_RST_CTL	(0x0740)
#define CDC_WSA_SPLINE_ASRC1_CTL0	(0x0744)
#define CDC_WSA_SPLINE_ASRC1_CTL1	(0x0748)
#define CDC_WSA_SPLINE_ASRC1_FIFO_CTL	(0x074C)
#define CDC_WSA_SPLINE_ASRC1_STATUS_FMIN_CNTR_LSB (0x0750)
#define CDC_WSA_SPLINE_ASRC1_STATUS_FMIN_CNTR_MSB (0x0754)
#define CDC_WSA_SPLINE_ASRC1_STATUS_FMAX_CNTR_LSB (0x0758)
#define CDC_WSA_SPLINE_ASRC1_STATUS_FMAX_CNTR_MSB (0x075C)
#define CDC_WSA_SPLINE_ASRC1_STATUS_FIFO	(0x0760)
#define WSA_MAX_OFFSET				(0x0760)

#define CDC_WSA_MACRO_MAX 0x1D9 /* 0x760/4 = 0x1D8 + 1 registers */

static const struct reg_default wsa_defaults[] = {
	/* WSA Macro */
	{ CDC_WSA_CLK_RST_CTRL_MCLK_CONTROL, 0x00},
	{ CDC_WSA_CLK_RST_CTRL_FS_CNT_CONTROL, 0x00},
	{ CDC_WSA_CLK_RST_CTRL_SWR_CONTROL, 0x00},
	{ CDC_WSA_TOP_TOP_CFG0, 0x00},
	{ CDC_WSA_TOP_TOP_CFG1, 0x00},
	{ CDC_WSA_TOP_FREQ_MCLK, 0x00},
	{ CDC_WSA_TOP_DEBUG_BUS_SEL, 0x00},
	{ CDC_WSA_TOP_DEBUG_EN0, 0x00},
	{ CDC_WSA_TOP_DEBUG_EN1, 0x00},
	{ CDC_WSA_TOP_DEBUG_DSM_LB, 0x88},
	{ CDC_WSA_TOP_RX_I2S_CTL, 0x0C},
	{ CDC_WSA_TOP_TX_I2S_CTL, 0x0C},
	{ CDC_WSA_TOP_I2S_CLK, 0x02},
	{ CDC_WSA_TOP_I2S_RESET, 0x00},
	{ CDC_WSA_RX_INP_MUX_RX_INT0_CFG0, 0x00},
	{ CDC_WSA_RX_INP_MUX_RX_INT0_CFG1, 0x00},
	{ CDC_WSA_RX_INP_MUX_RX_INT1_CFG0, 0x00},
	{ CDC_WSA_RX_INP_MUX_RX_INT1_CFG1, 0x00},
	{ CDC_WSA_RX_INP_MUX_RX_MIX_CFG0, 0x00},
	{ CDC_WSA_RX_INP_MUX_RX_EC_CFG0, 0x00},
	{ CDC_WSA_RX_INP_MUX_SOFTCLIP_CFG0, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_PATH_CTL, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_CFG, 0x10},
	{ CDC_WSA_VBAT_BCL_VBAT_ADC_CAL1, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_ADC_CAL2, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_ADC_CAL3, 0x04},
	{ CDC_WSA_VBAT_BCL_VBAT_PK_EST1, 0xE0},
	{ CDC_WSA_VBAT_BCL_VBAT_PK_EST2, 0x01},
	{ CDC_WSA_VBAT_BCL_VBAT_PK_EST3, 0x40},
	{ CDC_WSA_VBAT_BCL_VBAT_RF_PROC1, 0x2A},
	{ CDC_WSA_VBAT_BCL_VBAT_RF_PROC2, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_TAC1, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_TAC2, 0x18},
	{ CDC_WSA_VBAT_BCL_VBAT_TAC3, 0x18},
	{ CDC_WSA_VBAT_BCL_VBAT_TAC4, 0x03},
	{ CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD1, 0x01},
	{ CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD2, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD3, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD4, 0x64},
	{ CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD5, 0x01},
	{ CDC_WSA_VBAT_BCL_VBAT_DEBUG1, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD_MON, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_GAIN_MON_VAL, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_BAN, 0x0C},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD1, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD2, 0x77},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD3, 0x01},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD4, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD5, 0x4B},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD6, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD7, 0x01},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD8, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD9, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_ATTN1, 0x04},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_ATTN2, 0x08},
	{ CDC_WSA_VBAT_BCL_VBAT_BCL_ATTN3, 0x0C},
	{ CDC_WSA_VBAT_BCL_VBAT_DECODE_CTL1, 0xE0},
	{ CDC_WSA_VBAT_BCL_VBAT_DECODE_CTL2, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG1, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG2, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG3, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG4, 0x00},
	{ CDC_WSA_VBAT_BCL_VBAT_DECODE_ST, 0x00},
	{ CDC_WSA_TX0_SPKR_PROT_PATH_CTL, 0x02},
	{ CDC_WSA_TX0_SPKR_PROT_PATH_CFG0, 0x00},
	{ CDC_WSA_TX1_SPKR_PROT_PATH_CTL, 0x02},
	{ CDC_WSA_TX1_SPKR_PROT_PATH_CFG0, 0x00},
	{ CDC_WSA_TX2_SPKR_PROT_PATH_CTL, 0x02},
	{ CDC_WSA_TX2_SPKR_PROT_PATH_CFG0, 0x00},
	{ CDC_WSA_TX3_SPKR_PROT_PATH_CTL, 0x02},
	{ CDC_WSA_TX3_SPKR_PROT_PATH_CFG0, 0x00},
	{ CDC_WSA_INTR_CTRL_CFG, 0x00},
	{ CDC_WSA_INTR_CTRL_CLR_COMMIT, 0x00},
	{ CDC_WSA_INTR_CTRL_PIN1_MASK0, 0xFF},
	{ CDC_WSA_INTR_CTRL_PIN1_STATUS0, 0x00},
	{ CDC_WSA_INTR_CTRL_PIN1_CLEAR0, 0x00},
	{ CDC_WSA_INTR_CTRL_PIN2_MASK0, 0xFF},
	{ CDC_WSA_INTR_CTRL_PIN2_STATUS0, 0x00},
	{ CDC_WSA_INTR_CTRL_PIN2_CLEAR0, 0x00},
	{ CDC_WSA_INTR_CTRL_LEVEL0, 0x00},
	{ CDC_WSA_INTR_CTRL_BYPASS0, 0x00},
	{ CDC_WSA_INTR_CTRL_SET0, 0x00},
	{ CDC_WSA_RX0_RX_PATH_CTL, 0x04},
	{ CDC_WSA_RX0_RX_PATH_CFG0, 0x00},
	{ CDC_WSA_RX0_RX_PATH_CFG1, 0x64},
	{ CDC_WSA_RX0_RX_PATH_CFG2, 0x8F},
	{ CDC_WSA_RX0_RX_PATH_CFG3, 0x00},
	{ CDC_WSA_RX0_RX_VOL_CTL, 0x00},
	{ CDC_WSA_RX0_RX_PATH_MIX_CTL, 0x04},
	{ CDC_WSA_RX0_RX_PATH_MIX_CFG, 0x7E},
	{ CDC_WSA_RX0_RX_VOL_MIX_CTL, 0x00},
	{ CDC_WSA_RX0_RX_PATH_SEC0, 0x04},
	{ CDC_WSA_RX0_RX_PATH_SEC1, 0x08},
	{ CDC_WSA_RX0_RX_PATH_SEC2, 0x00},
	{ CDC_WSA_RX0_RX_PATH_SEC3, 0x00},
	{ CDC_WSA_RX0_RX_PATH_SEC5, 0x00},
	{ CDC_WSA_RX0_RX_PATH_SEC6, 0x00},
	{ CDC_WSA_RX0_RX_PATH_SEC7, 0x00},
	{ CDC_WSA_RX0_RX_PATH_MIX_SEC0, 0x08},
	{ CDC_WSA_RX0_RX_PATH_MIX_SEC1, 0x00},
	{ CDC_WSA_RX0_RX_PATH_DSMDEM_CTL, 0x00},
	{ CDC_WSA_RX1_RX_PATH_CFG0, 0x00},
	{ CDC_WSA_RX1_RX_PATH_CFG1, 0x64},
	{ CDC_WSA_RX1_RX_PATH_CFG2, 0x8F},
	{ CDC_WSA_RX1_RX_PATH_CFG3, 0x00},
	{ CDC_WSA_RX1_RX_VOL_CTL, 0x00},
	{ CDC_WSA_RX1_RX_PATH_MIX_CTL, 0x04},
	{ CDC_WSA_RX1_RX_PATH_MIX_CFG, 0x7E},
	{ CDC_WSA_RX1_RX_VOL_MIX_CTL, 0x00},
	{ CDC_WSA_RX1_RX_PATH_SEC0, 0x04},
	{ CDC_WSA_RX1_RX_PATH_SEC1, 0x08},
	{ CDC_WSA_RX1_RX_PATH_SEC2, 0x00},
	{ CDC_WSA_RX1_RX_PATH_SEC3, 0x00},
	{ CDC_WSA_RX1_RX_PATH_SEC5, 0x00},
	{ CDC_WSA_RX1_RX_PATH_SEC6, 0x00},
	{ CDC_WSA_RX1_RX_PATH_SEC7, 0x00},
	{ CDC_WSA_RX1_RX_PATH_MIX_SEC0, 0x08},
	{ CDC_WSA_RX1_RX_PATH_MIX_SEC1, 0x00},
	{ CDC_WSA_RX1_RX_PATH_DSMDEM_CTL, 0x00},
	{ CDC_WSA_BOOST0_BOOST_PATH_CTL, 0x00},
	{ CDC_WSA_BOOST0_BOOST_CTL, 0xD0},
	{ CDC_WSA_BOOST0_BOOST_CFG1, 0x89},
	{ CDC_WSA_BOOST0_BOOST_CFG2, 0x04},
	{ CDC_WSA_BOOST1_BOOST_PATH_CTL, 0x00},
	{ CDC_WSA_BOOST1_BOOST_CTL, 0xD0},
	{ CDC_WSA_BOOST1_BOOST_CFG1, 0x89},
	{ CDC_WSA_BOOST1_BOOST_CFG2, 0x04},
	{ CDC_WSA_COMPANDER0_CTL0, 0x60},
	{ CDC_WSA_COMPANDER0_CTL1, 0xDB},
	{ CDC_WSA_COMPANDER0_CTL2, 0xFF},
	{ CDC_WSA_COMPANDER0_CTL3, 0x35},
	{ CDC_WSA_COMPANDER0_CTL4, 0xFF},
	{ CDC_WSA_COMPANDER0_CTL5, 0x00},
	{ CDC_WSA_COMPANDER0_CTL6, 0x01},
	{ CDC_WSA_COMPANDER0_CTL7, 0x28},
	{ CDC_WSA_COMPANDER1_CTL0, 0x60},
	{ CDC_WSA_COMPANDER1_CTL1, 0xDB},
	{ CDC_WSA_COMPANDER1_CTL2, 0xFF},
	{ CDC_WSA_COMPANDER1_CTL3, 0x35},
	{ CDC_WSA_COMPANDER1_CTL4, 0xFF},
	{ CDC_WSA_COMPANDER1_CTL5, 0x00},
	{ CDC_WSA_COMPANDER1_CTL6, 0x01},
	{ CDC_WSA_COMPANDER1_CTL7, 0x28},
	{ CDC_WSA_SOFTCLIP0_CRC, 0x00},
	{ CDC_WSA_SOFTCLIP0_SOFTCLIP_CTRL, 0x38},
	{ CDC_WSA_SOFTCLIP1_CRC, 0x00},
	{ CDC_WSA_SOFTCLIP1_SOFTCLIP_CTRL, 0x38},
	{ CDC_WSA_EC_HQ0_EC_REF_HQ_PATH_CTL, 0x00},
	{ CDC_WSA_EC_HQ0_EC_REF_HQ_CFG0, 0x01},
	{ CDC_WSA_EC_HQ1_EC_REF_HQ_PATH_CTL, 0x00},
	{ CDC_WSA_EC_HQ1_EC_REF_HQ_CFG0, 0x01},
	{ CDC_WSA_SPLINE_ASRC0_CLK_RST_CTL, 0x00},
	{ CDC_WSA_SPLINE_ASRC0_CTL0, 0x00},
	{ CDC_WSA_SPLINE_ASRC0_CTL1, 0x00},
	{ CDC_WSA_SPLINE_ASRC0_FIFO_CTL, 0xA8},
	{ CDC_WSA_SPLINE_ASRC0_STATUS_FMIN_CNTR_LSB, 0x00},
	{ CDC_WSA_SPLINE_ASRC0_STATUS_FMIN_CNTR_MSB, 0x00},
	{ CDC_WSA_SPLINE_ASRC0_STATUS_FMAX_CNTR_LSB, 0x00},
	{ CDC_WSA_SPLINE_ASRC0_STATUS_FMAX_CNTR_MSB, 0x00},
	{ CDC_WSA_SPLINE_ASRC0_STATUS_FIFO, 0x00},
	{ CDC_WSA_SPLINE_ASRC1_CLK_RST_CTL, 0x00},
	{ CDC_WSA_SPLINE_ASRC1_CTL0, 0x00},
	{ CDC_WSA_SPLINE_ASRC1_CTL1, 0x00},
	{ CDC_WSA_SPLINE_ASRC1_FIFO_CTL, 0xA8},
	{ CDC_WSA_SPLINE_ASRC1_STATUS_FMIN_CNTR_LSB, 0x00},
	{ CDC_WSA_SPLINE_ASRC1_STATUS_FMIN_CNTR_MSB, 0x00},
	{ CDC_WSA_SPLINE_ASRC1_STATUS_FMAX_CNTR_LSB, 0x00},
	{ CDC_WSA_SPLINE_ASRC1_STATUS_FMAX_CNTR_MSB, 0x00},
	{ CDC_WSA_SPLINE_ASRC1_STATUS_FIFO, 0x00},
};

#define WSA_REG(x) ((x) / 4)
#define RD_REG 1
#define WR_REG 2
#define RD_WR_REG (RD_REG | WR_REG)

u8 wsa_wsa_reg_access[CDC_WSA_MACRO_MAX] = {
	[WSA_REG(CDC_WSA_CLK_RST_CTRL_MCLK_CONTROL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_CLK_RST_CTRL_FS_CNT_CONTROL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_CLK_RST_CTRL_SWR_CONTROL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_TOP_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_TOP_CFG1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_FREQ_MCLK)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_DEBUG_BUS_SEL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_DEBUG_EN0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_DEBUG_EN1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_DEBUG_DSM_LB)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_RX_I2S_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_TX_I2S_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_I2S_CLK)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TOP_I2S_RESET)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX_INP_MUX_RX_INT0_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX_INP_MUX_RX_INT0_CFG1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX_INP_MUX_RX_INT1_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX_INP_MUX_RX_INT1_CFG1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX_INP_MUX_RX_MIX_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX_INP_MUX_RX_EC_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX_INP_MUX_SOFTCLIP_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_CFG)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_ADC_CAL1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_ADC_CAL2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_ADC_CAL3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_PK_EST1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_PK_EST2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_PK_EST3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_RF_PROC1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_RF_PROC2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_TAC1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_TAC2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_TAC3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_TAC4)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD4)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD5)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_DEBUG1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_GAIN_UPD_MON)] = WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_GAIN_MON_VAL)] = RD_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BAN)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD4)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD5)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD6)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD7)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD8)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_GAIN_UPD9)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_ATTN1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_ATTN2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_BCL_ATTN3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_DECODE_CTL1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_DECODE_CTL2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_DECODE_CFG4)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_VBAT_BCL_VBAT_DECODE_ST)] = RD_REG,
	[WSA_REG(CDC_WSA_TX0_SPKR_PROT_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TX0_SPKR_PROT_PATH_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TX1_SPKR_PROT_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TX1_SPKR_PROT_PATH_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TX2_SPKR_PROT_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TX2_SPKR_PROT_PATH_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TX3_SPKR_PROT_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_TX3_SPKR_PROT_PATH_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_CFG)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_CLR_COMMIT)] = WR_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_PIN1_MASK0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_PIN1_STATUS0)] = RD_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_PIN1_CLEAR0)] = WR_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_PIN2_MASK0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_PIN2_STATUS0)] = RD_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_PIN2_CLEAR0)] = WR_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_LEVEL0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_BYPASS0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_INTR_CTRL_SET0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_CFG1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_CFG2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_CFG3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_VOL_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_MIX_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_MIX_CFG)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_VOL_MIX_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_SEC0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_SEC1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_SEC2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_SEC3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_SEC5)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_SEC6)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_SEC7)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_MIX_SEC0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_MIX_SEC1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX0_RX_PATH_DSMDEM_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_CFG1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_CFG2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_CFG3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_VOL_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_MIX_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_MIX_CFG)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_VOL_MIX_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_SEC0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_SEC1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_SEC2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_SEC3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_SEC5)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_SEC6)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_SEC7)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_MIX_SEC0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_MIX_SEC1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_RX1_RX_PATH_DSMDEM_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_BOOST0_BOOST_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_BOOST0_BOOST_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_BOOST0_BOOST_CFG1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_BOOST0_BOOST_CFG2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_BOOST1_BOOST_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_BOOST1_BOOST_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_BOOST1_BOOST_CFG1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_BOOST1_BOOST_CFG2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER0_CTL0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER0_CTL1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER0_CTL2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER0_CTL3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER0_CTL4)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER0_CTL5)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER0_CTL6)] = RD_REG,
	[WSA_REG(CDC_WSA_COMPANDER0_CTL7)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER1_CTL0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER1_CTL1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER1_CTL2)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER1_CTL3)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER1_CTL4)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER1_CTL5)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_COMPANDER1_CTL6)] = RD_REG,
	[WSA_REG(CDC_WSA_COMPANDER1_CTL7)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SOFTCLIP0_CRC)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SOFTCLIP0_SOFTCLIP_CTRL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SOFTCLIP1_CRC)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SOFTCLIP1_SOFTCLIP_CTRL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_EC_HQ0_EC_REF_HQ_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_EC_HQ0_EC_REF_HQ_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_EC_HQ1_EC_REF_HQ_PATH_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_EC_HQ1_EC_REF_HQ_CFG0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC0_CLK_RST_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC0_CTL0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC0_CTL1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC0_FIFO_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC0_STATUS_FMIN_CNTR_LSB)] = RD_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC0_STATUS_FMIN_CNTR_MSB)] = RD_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC0_STATUS_FMAX_CNTR_LSB)] = RD_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC0_STATUS_FMAX_CNTR_MSB)] = RD_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC0_STATUS_FIFO)] = RD_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC1_CLK_RST_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC1_CTL0)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC1_CTL1)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC1_FIFO_CTL)] = RD_WR_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC1_STATUS_FMIN_CNTR_LSB)] = RD_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC1_STATUS_FMIN_CNTR_MSB)] = RD_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC1_STATUS_FMAX_CNTR_LSB)] = RD_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC1_STATUS_FMAX_CNTR_MSB)] = RD_REG,
	[WSA_REG(CDC_WSA_SPLINE_ASRC1_STATUS_FIFO)] = RD_REG,
};

static bool wsa_is_readable_register(struct device *dev,
					unsigned int reg)
{
	return wsa_wsa_reg_access[WSA_REG(reg)] & RD_REG;
}

static bool wsa_is_writeable_register(struct device *dev,
					 unsigned int reg)
{
	return wsa_wsa_reg_access[WSA_REG(reg)] & WR_REG;
}

static bool wsa_is_volatile_register(struct device *dev,
					unsigned int reg)
{
	/* Update volatile list for rx/tx macros */
	switch (reg) {
	case CDC_WSA_VBAT_BCL_VBAT_GAIN_MON_VAL:
	case CDC_WSA_VBAT_BCL_VBAT_DECODE_ST:
	case CDC_WSA_INTR_CTRL_PIN1_STATUS0:
	case CDC_WSA_INTR_CTRL_PIN2_STATUS0:
	case CDC_WSA_COMPANDER0_CTL6:
	case CDC_WSA_COMPANDER1_CTL6:
	case CDC_WSA_SPLINE_ASRC0_STATUS_FMIN_CNTR_LSB:
	case CDC_WSA_SPLINE_ASRC0_STATUS_FMIN_CNTR_MSB:
	case CDC_WSA_SPLINE_ASRC0_STATUS_FMAX_CNTR_LSB:
	case CDC_WSA_SPLINE_ASRC0_STATUS_FMAX_CNTR_MSB:
	case CDC_WSA_SPLINE_ASRC0_STATUS_FIFO:
	case CDC_WSA_SPLINE_ASRC1_STATUS_FMIN_CNTR_LSB:
	case CDC_WSA_SPLINE_ASRC1_STATUS_FMIN_CNTR_MSB:
	case CDC_WSA_SPLINE_ASRC1_STATUS_FMAX_CNTR_LSB:
	case CDC_WSA_SPLINE_ASRC1_STATUS_FMAX_CNTR_MSB:
	case CDC_WSA_SPLINE_ASRC1_STATUS_FIFO:
		return true;
	}
	return false;
}

const struct regmap_config wsa_regmap_config = {
	.name = "wsa_macro",
	.reg_bits = 16,
	.val_bits = 32, /* 8 but with 32 bit read/write */
	.reg_stride = 4,
	.cache_type = REGCACHE_FLAT,
	.reg_defaults = wsa_defaults,
	.num_reg_defaults = ARRAY_SIZE(wsa_defaults),
	.max_register = WSA_MAX_OFFSET,
	.writeable_reg = wsa_is_writeable_register,
	.volatile_reg = wsa_is_volatile_register,
	.readable_reg = wsa_is_readable_register,
};
